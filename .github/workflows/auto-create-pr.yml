name: Auto Create PR from Issue

on:
  issue_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      issue_number:
        description: "Issue number for testing"
        required: true
      issue_title:
        description: "Issue title"
        required: true
      comment_body:
        description: "Comment text (e.g. /create-pr /feature)"
        required: true

jobs:
  create-branch-and-pr:
    if: >
      (github.event_name == 'workflow_dispatch') ||
      (
        github.event.issue.pull_request == null &&
        contains(github.event.comment.body, '/create-pr') &&
        (
          github.event.comment.author_association == 'MEMBER' ||
          github.event.comment.author_association == 'OWNER'
        )
      )

    runs-on: ubuntu-latest

    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up variables
        id: vars
        run: |
          # Create branch name from issue number and title.
          ISSUE_NUMBER=${{ github.event.issue.number }}
          ISSUE_TITLE="${{ github.event.issue.title }}"
          COMMENT_BODY="${{ github.event.comment.body }}"
          
          # Extract branch type from comment (feature, bugfix, hotfix, release, or default to feature).
          if echo "$COMMENT_BODY" | grep -q "/create-pr /bugfix"; then
            BRANCH_TYPE="bugfix"
          elif echo "$COMMENT_BODY" | grep -q "/create-pr /feature"; then
            BRANCH_TYPE="feature"
          elif echo "$COMMENT_BODY" | grep -q "/create-pr /hotfix"; then
            BRANCH_TYPE="hotfix"
          elif echo "$COMMENT_BODY" | grep -q "/create-pr /release"; then
            BRANCH_TYPE="release"
          else
            # Default to feature if no type specified
            BRANCH_TYPE="feature"
          fi
          
          # Clean up the title for the branch name.
          CLEAN_TITLE=$(echo "$ISSUE_TITLE" | tr '[:upper:]' '[:lower:]' | tr -cs '[:alnum:]' '-' | sed 's/^-//; s/-$//' | cut -c1-50)
          BRANCH_NAME="${BRANCH_TYPE}/${CLEAN_TITLE}"

          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "branch_type=$BRANCH_TYPE" >> $GITHUB_OUTPUT
          echo "issue_number=$ISSUE_NUMBER" >> $GITHUB_OUTPUT

      - name: Create branch
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Create and push new branch.
          git checkout -b ${{ steps.vars.outputs.branch_name }}
          git push origin ${{ steps.vars.outputs.branch_name }}

      - name: Get issue assignees
        id: assignees
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          # Use the issue author
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            ASSIGNEE="${{ github.actor }}"
          else
            ASSIGNEE="${{ github.event.issue.user.login }}"
          fi
          echo "assignees=$ASSIGNEE" >> $GITHUB_OUTPUT

      - name: Create Draft PR
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          # Read PR template if it exists, otherwise just add the issue to Close it from.
          if [ -f .github/pull_request_template.md ]; then
            PR_BODY=$(cat .github/pull_request_template.md)
            PR_BODY="${PR_BODY}

          Closes #${{ steps.vars.outputs.issue_number }}"
          else
            PR_BODY="Closes #${{ steps.vars.outputs.issue_number }}"
          fi
          
          # Create draft PR with template body and assignees
          gh pr create \
            --title "${{ github.event_name == 'workflow_dispatch' && github.event.inputs.issue_title || github.event.issue.title }}" \
            --body "$PR_BODY" \
            --draft \
            --base ${{ github.event.repository.default_branch }} \
            --head ${{ steps.vars.outputs.branch_name }} \
            --assignee "${{ steps.assignees.outputs.assignees }}"
